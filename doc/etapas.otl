: Este documento enumera todas las tareas y etapas que se relizarán
: para concluir el desarrollo del juego.

: Note que este archivo se modifica con frecuencia, en este momento
: no está completo.

☐ 38% Etapa 5 (actual)
	: Se agregan mejoras como las animaciones
	☑ mostrar la siguiente pieza que va a caer.
	☑ aumentar la velocidad de caída cuando completa mas de 10 lineas.
	☐ crear presentacion del juego
	☑ mejorar la escena de creditos
	☐ cambiar el tema visual de las piezas
	☐ crear efectos visuales en la transición entre escenas
	☐ Colocar sonidos
	☐ crear animación a la eliminación de lineas
	☑ aplicar animaciones a la rotación de las piezas
	☑ permite aternar entre pantalla completa y ventana.
	☑ soporte para jugar con joystick.
	☐ probar en otros sistemas operativos como windows.
	☐ genera version ejecutable en formato .exe
        ☑ mejorar la escena de juego
          ☑ crear un mensaje al inicio que diga "listo, ya!!"
          ☑ mostrar un mensaje de game over con una imagen



Etapas anteriores
=================


☑ 100% Etapa 1
	: El propósito de esta etapa es tener una ventana principal con
	: un fondo de pantalla y una leyenda de texto. El usuario tiene
	: que poder cerrar la ventana pulsando una tecla o haciendo click
	: con el mouse.
	
	: En sí es muy básico, pero aún así involucra varias tareas realacionadas
	: con la organización del proyecto, la documentación, los directorios y 
	: las funciones iniciales.
	
	☑ crear repositorio
	☑ definir la estructura de directorios a utilizar
	☑ crear el directorio 'doc' con la documentación en formato sphinx
	☑ crear una ventana
	☑ gestionar los eventos de mouse y teclado
	☑ crear el sistema de escenas básico
		☑ explicar la estrategia a desarrollar
		☑ mejorar el programa principal
		☑ crear la escena abstracta
			☑ crear una escena de implementación (presentación)
	☑ crear función para cargar imagenes
	☑ mostrar una imagen con el titulo del juego.
	☑ definir un archivo setup.py inicial
	☑ publicar URL de la documentación en el foro
	☑ 100% desarrollar un sistema de fuentes tipograficas
		☑ crear función para cargar e imprimir fuentes
		☑ mostrar el mensaje "pulse una tecla para salir" en la pantalla principal.
	☑ proponer un estilo de codificación
☑ 100% Etapa 2
	: Se desarrollan los movimientos básicos de las piezas, el usuario
	: tiene que poder mover una pieza por la pantalla usando los
	: direccionales del teclado y rotar las mismas con las teclas 'x' y
	: 'z'.
	
	: Si la ficha llega abajo queda bloqueada hacia abajo, pero igualmente
	: se tiene que poder mover de izquierda a derecha.
	
	: Se relaciona con la etapa uno porque el usuario puede pulsar
	: "Escape" y se le tiene que mostrar la pantalla del ejemplo anterior,
	: en donde pulsando una tecla se cierra toda la aplicación.
	
	: Hay solo un tipo de pieza (la "L").
	
	☑ Extender el sistema de fuentes
		☑ crear un directorio para recursos de fuentes tipograficas
		☑ que la función de imprimir cadenas soporte saltos de linea.
	☑ crear escena de juego
	☑ crear una ficha
	☑ permitir el movimiento de la ficha
	☑ aplicar restricciones de movimiento como los bordes
		☑ colisiones sencillas con el centro de la pieza.
		☑ colisiones logradas con los bordes.
	☑ implementar las rotaciones hacia izquiera o derecha
	☑ restringir las rotaciones en los bordes
	☑ mejorar el sistema de escenas para permitir cambios de una a otra
	☑ hacer que el usuario pueda ir a otra escena (la de la etapa anterior) pulsando la tecla ESC.
		☑ Imprimir un mensaje que indique esto en la ventana.
		☑ Asignar el cambio a la tecla ESCAPE.
☑ 100% Etapa 3
	: En esta etapa ya se puede comenzar a apilar fichas. El usuario tiene
	: que poder hacer bajar una pieza, que permanezca en el suelo y que
	: llegue otra nueva para poder mover.
	
	: En esta etapa ya caen desde la parte superior de escenario el resto
	: de las fichas, no solo las 'L'.
	
	: Cuando el usuario llegue arriba se tiene que imprimir algún mensaje
	: y cambiar de escena.
	
	: No se pueden hacer lineas en esta versión, solamente apilar.
	
	☑ Detener piezas cuando llegan abajo
	☑ Crear nuevas piezas cuando deja una en el suelo
	☑ Implementar colisiones entre las piezas
	☑ Crear las piezas que faltan.
	☑ Mostrar las piezas aleatoriamente.
	☑ Permitir que el usuario pueda bajar una pieza directamente (y no progresivamente)
		: se agrega la tecla SPACE al control del juego.
	☑ Mostrar las piezas reposando si tocan el suelo
		: primero mostrar rectangulos de cualquier color en donde
		: existe una colisión. Luego se puede pintar la pieza tal y
		: como es.
☑ 100% Etapa 4
	: Aquí se implementan la creación de lineas y la asignación de puntaje.
	☑ permitir que el usuario pueda hacer lineas
	☑ hacer que las piezas bajen a una determinada velocidad.
	☑ implementar un contador de lineas
	☑ imprimir un mensaje de GameOver cuando llega a la parte superior.

Siguientes etapas
=================

☐ % Etapa 6
	☑ permitir que el usuario use el mouse para seleccionar en el menu.
	☐ crear la escena de ayuda explicando los controles.
	☐ crear la escena de configuración del juego
		☐ opción para des/habilitar sonidos
		☐ opción para des/habilitar musica
		☑ alternar entre ventana y pantalla completa.
		☒ selección del tema visual a utilizar.
                : No se ve necesario utilizar varios temas.
	☐ administrar los puntajes del juego
		☐ crear escena para mostrar los puntajes de los mejores jugadores
		☐ crear escena para quien logra un puntaje muy bueno
	☐ crear paquete .deb para distribuciones como Debian y Ubuntu.
